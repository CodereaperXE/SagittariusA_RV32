$date
	Wed Jul 16 00:07:30 2025
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module main $end
$var wire 1 ! nclk $end
$var wire 1 " zero $end
$var wire 7 # opcode [6:0] $end
$var wire 1 $ mem_op_r $end
$var wire 32 % ir_reg_out [31:0] $end
$var wire 8 & func7 [31:24] $end
$var wire 3 ' func3 [14:12] $end
$var wire 3 ( alu_sel [2:0] $end
$var reg 1 ) alu_reg_enable $end
$var reg 1 * alu_reg_mux_select $end
$var reg 1 + clk $end
$var reg 8 , counter [7:0] $end
$var reg 3 - imm_src [2:0] $end
$var reg 1 . ir_reg_enable $end
$var reg 1 / mem_enable $end
$var reg 1 0 mem_write_enable $end
$var reg 1 1 memsel_mux_select $end
$var reg 8 2 nstate [7:0] $end
$var reg 1 3 old_pc_enable $end
$var reg 2 4 opsel1_select [1:0] $end
$var reg 2 5 opsel2_select [1:0] $end
$var reg 1 6 pc_enable $end
$var reg 1 7 regfile_mux_select $end
$var reg 1 8 reset $end
$var reg 1 9 rf_we $end
$var reg 8 : state [7:0] $end
$scope module uut $end
$var wire 1 ) alu_reg_enable $end
$var wire 1 * alu_reg_mux_select $end
$var wire 3 ; alu_sel [2:0] $end
$var wire 1 + clk $end
$var wire 3 < imm_src [2:0] $end
$var wire 1 . ir_reg_enable $end
$var wire 1 / mem_enable $end
$var wire 1 0 mem_write_enable $end
$var wire 1 1 memsel_mux_select $end
$var wire 1 3 old_pc_enable $end
$var wire 2 = opsel1_select [1:0] $end
$var wire 2 > opsel2_select [1:0] $end
$var wire 1 6 pc_enable $end
$var wire 1 7 regfile_mux_select $end
$var wire 1 8 reset $end
$var wire 1 9 rf_we $end
$var wire 1 " zero $end
$var wire 32 ? sign_extend_out [31:0] $end
$var wire 32 @ rs2_out [31:0] $end
$var wire 32 A rs1_out [31:0] $end
$var wire 32 B rf_reg_rs2_out [31:0] $end
$var wire 32 C rf_reg_rs1_out [31:0] $end
$var wire 32 D regfile_mux_out [31:0] $end
$var wire 32 E pc_out [31:0] $end
$var wire 32 F opsel2_mux_out [31:0] $end
$var wire 32 G opsel1_mux_out [31:0] $end
$var wire 32 H old_pc_out [31:0] $end
$var wire 32 I memset_mux_out [31:0] $end
$var wire 1 $ mem_op_r $end
$var wire 32 J mem_data_out [31:0] $end
$var wire 32 K ir_reg_out [31:0] $end
$var wire 32 L alu_reg_out [31:0] $end
$var wire 32 M alu_reg_mux_out [31:0] $end
$var wire 32 N alu_out [31:0] $end
$var reg 1 O global_we $end
$scope module alu1 $end
$var wire 3 P alu_sel [2:0] $end
$var wire 32 Q op1 [31:0] $end
$var wire 32 R op2 [31:0] $end
$var wire 1 " zero $end
$var wire 32 S res [31:0] $end
$upscope $end
$scope module alu_reg $end
$var wire 1 + clk $end
$var wire 32 T in [31:0] $end
$var wire 1 8 reset $end
$var wire 1 ) we $end
$var wire 32 U out [31:0] $end
$var reg 32 V register [31:0] $end
$upscope $end
$scope module ir_reg $end
$var wire 1 + clk $end
$var wire 1 8 reset $end
$var wire 1 . we $end
$var wire 32 W out [31:0] $end
$var wire 32 X in [31:0] $end
$var reg 32 Y register [31:0] $end
$upscope $end
$scope module memory $end
$var wire 24 Z addr [23:0] $end
$var wire 1 + clk $end
$var wire 1 / enable $end
$var wire 1 $ op_r $end
$var wire 1 0 we $end
$var wire 32 [ data_out [31:0] $end
$var wire 32 \ data_in [31:0] $end
$var reg 24 ] addr_reg [23:0] $end
$var reg 4 ^ counter [3:0] $end
$var reg 1 _ op_rr $end
$var reg 1 ` state $end
$upscope $end
$scope module old_pc $end
$var wire 1 + clk $end
$var wire 1 8 reset $end
$var wire 1 3 we $end
$var wire 32 a out [31:0] $end
$var wire 32 b in [31:0] $end
$var reg 32 c register [31:0] $end
$upscope $end
$scope module pc $end
$var wire 1 + clk $end
$var wire 32 d in [31:0] $end
$var wire 1 8 reset $end
$var wire 1 6 we $end
$var wire 32 e out [31:0] $end
$var reg 32 f register [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 5 g a1 [4:0] $end
$var wire 5 h a2 [4:0] $end
$var wire 5 i a3 [4:0] $end
$var wire 1 + clk $end
$var wire 32 j rd1 [31:0] $end
$var wire 32 k rd2 [31:0] $end
$var wire 1 8 reset $end
$var wire 32 l wd3 [31:0] $end
$var wire 1 9 we $end
$var integer 32 m i [31:0] $end
$upscope $end
$scope module rf_reg1 $end
$var wire 1 + clk $end
$var wire 32 n in [31:0] $end
$var wire 1 8 reset $end
$var wire 1 O we $end
$var wire 32 o out [31:0] $end
$var reg 32 p register [31:0] $end
$upscope $end
$scope module rf_reg2 $end
$var wire 1 + clk $end
$var wire 32 q in [31:0] $end
$var wire 1 8 reset $end
$var wire 1 O we $end
$var wire 32 r out [31:0] $end
$var reg 32 s register [31:0] $end
$upscope $end
$scope module sign_extend $end
$var wire 3 t imm_src [2:0] $end
$var wire 32 u inp [31:0] $end
$var wire 32 v out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b100000 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
0`
0_
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
1O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b1 :
09
18
07
06
b0 5
b0 4
03
b10 2
01
00
0/
0.
b0 -
b0 ,
0+
0*
0)
b0 (
b0 '
b0 &
b0 %
0$
b0 #
1"
1!
$end
#100
08
#1000
0!
1+
#2000
1.
b10 :
b100 M
b100 d
b100 N
b100 S
b100 T
0"
b100 F
b100 R
13
16
1*
b1 5
b1 >
b1 4
b1 =
1/
1!
0+
#3000
b1000 M
b1000 d
b1000 N
b1000 S
b1000 T
1"
b100 G
b100 Q
b100 Z
b100 I
b100 E
b100 b
b100 e
b100 f
1`
0!
1+
#4000
b0 M
b0 d
b0 F
b0 R
b0 N
b0 S
b0 T
1"
b0 G
b0 Q
03
06
0*
b0 5
b0 >
b0 4
b0 =
0/
1!
0+
#5000
b1 ^
0!
1+
#6000
1!
0+
#7000
b10 ^
0!
1+
#8000
1!
0+
#9000
b11 ^
0!
1+
#10000
1!
0+
#11000
b110000010000000010010011 D
b110000010000000010010011 l
b110000010000000010010011 J
b110000010000000010010011 X
b110000010000000010010011 [
b11 2
1$
1_
b100 ^
0!
1+
#12000
b11 :
1!
0+
#13000
b1100 N
b1100 S
b1100 T
0"
b1100 F
b1100 R
b0 D
b0 l
b1100 ?
b1100 v
b10010 2
b0 J
b0 X
b0 [
b1 i
b1100 h
b1010 A
b1010 j
b1010 n
b10 g
b10011 #
b110000010000000010010011 %
b110000010000000010010011 K
b110000010000000010010011 W
b110000010000000010010011 Y
b110000010000000010010011 u
0$
0_
0`
b0 ^
0!
1+
#14000
b0 2
b10010 :
0.
1!
0+
#15000
b10110 N
b10110 S
b10110 T
b1010 G
b1010 Q
b1010 C
b1010 o
b1010 p
0!
1+
#16000
b1 2
b0 :
b10110 D
b10110 l
b10110 M
b10110 d
19
17
1*
1!
0+
#17000
0!
1+
#18000
b10 2
b1 :
1!
0+
#19000
0!
1+
#20000
1.
b10 :
b1000 D
b1000 l
b1000 M
b1000 d
1"
b100 F
b100 R
b1000 N
b1000 S
b1000 T
b100 G
b100 Q
09
13
16
b1 5
b1 >
b1 4
b1 =
1/
1!
0+
#21000
b1100 D
b1100 l
b1100 M
b1100 d
b1100 N
b1100 S
b1100 T
b0 ?
b0 v
0"
b1000 G
b1000 Q
b1000 Z
b0 i
b0 h
b0 A
b0 j
b0 n
b0 g
b0 #
b1000 I
b0 %
b0 K
b0 W
b0 Y
b0 u
b100 H
b100 a
b100 c
b1000 E
b1000 b
b1000 e
b1000 f
1`
b100 ]
0!
1+
#22000
b0 D
b0 l
b0 M
b0 d
b0 F
b0 R
b1010 N
b1010 S
b1010 T
b1010 G
b1010 Q
03
06
0*
b0 5
b0 >
b0 4
b0 =
0/
1!
0+
#23000
b0 N
b0 S
b0 T
1"
b0 G
b0 Q
b0 C
b0 o
b0 p
b1 ^
0!
1+
#24000
1!
0+
#25000
b10 ^
0!
1+
#26000
1!
0+
#27000
b11 ^
0!
1+
#28000
1!
0+
#29000
b10000001000000100010011 J
b10000001000000100010011 X
b10000001000000100010011 [
b11 2
1$
1_
b100 ^
0!
1+
#30000
b11 :
1!
0+
#31000
b100 N
b100 S
b100 T
0"
b100 F
b100 R
b100 ?
b100 v
b10010 2
b0 J
b0 X
b0 [
b10 i
b100 h
b10110 A
b10110 j
b10110 n
b1 g
b10011 #
b10000001000000100010011 %
b10000001000000100010011 K
b10000001000000100010011 W
b10000001000000100010011 Y
b10000001000000100010011 u
0$
0_
0`
b0 ^
0!
1+
#32000
b0 2
b10010 :
0.
1!
0+
#33000
b11010 N
b11010 S
b11010 T
b10110 G
b10110 Q
b10110 C
b10110 o
b10110 p
0!
1+
#34000
b1 2
b0 :
b11010 D
b11010 l
b11010 M
b11010 d
19
1*
1!
0+
#35000
0!
1+
#36000
b10 2
b1 :
1!
0+
#37000
0!
1+
#38000
1.
b10 :
b1100 D
b1100 l
b1100 M
b1100 d
b1100 N
b1100 S
b1100 T
b1000 G
b1000 Q
09
13
16
b1 5
b1 >
b1 4
b1 =
1/
1!
0+
#39000
b10000 D
b10000 l
b10000 M
b10000 d
b10000 N
b10000 S
b10000 T
b1100 G
b1100 Q
b1100 Z
b0 ?
b0 v
b1100 I
b0 i
b0 h
b0 A
b0 j
b0 n
b0 g
b0 #
b1100 E
b1100 b
b1100 e
b1100 f
b1000 H
b1000 a
b1000 c
b0 %
b0 K
b0 W
b0 Y
b0 u
1`
b1000 ]
0!
1+
#40000
b0 D
b0 l
b0 M
b0 d
b0 F
b0 R
b10110 N
b10110 S
b10110 T
b10110 G
b10110 Q
03
06
0*
b0 5
b0 >
b0 4
b0 =
0/
1!
0+
#41000
b0 N
b0 S
b0 T
1"
b0 G
b0 Q
b0 C
b0 o
b0 p
b1 ^
0!
1+
#42000
1!
0+
#43000
b10 ^
0!
1+
#44000
1!
0+
#45000
b11 ^
0!
1+
#46000
1!
0+
#47000
bx J
bx X
bx [
b11 2
1$
1_
b100 ^
0!
1+
#48000
b11 :
1!
0+
#49000
bx N
bx S
bx T
x"
bx F
bx R
b0x0 (
b0x0 ;
b0x0 P
bx ?
bx v
b0 J
b0 X
b0 [
bx i
bx @
bx k
bx q
bx h
bx A
bx j
bx n
bx g
b0xxxxxxx &
bx '
bx #
bx %
bx K
bx W
bx Y
bx u
0$
0_
0`
b0 ^
0!
1+
#50000
0.
1!
0+
#51000
bx G
bx Q
bx C
bx o
bx p
bx B
bx \
bx r
bx s
0!
1+
#52000
1!
0+
#53000
0!
1+
#54000
1!
0+
#55000
0!
1+
#56000
1!
0+
#57000
0!
1+
#58000
1!
0+
#59000
0!
1+
#60000
1!
0+
#61000
0!
1+
#62000
1!
0+
#63000
0!
1+
#64000
1!
0+
#65000
0!
1+
#66000
1!
0+
#67000
0!
1+
#68000
1!
0+
#69000
0!
1+
#70000
1!
0+
#71000
0!
1+
#72000
1!
0+
#73000
0!
1+
#74000
1!
0+
#75000
0!
1+
#76000
1!
0+
#77000
0!
1+
#78000
1!
0+
#79000
0!
1+
#80000
1!
0+
#81000
0!
1+
#82000
1!
0+
#83000
0!
1+
#84000
1!
0+
#85000
0!
1+
#86000
1!
0+
#87000
0!
1+
#88000
1!
0+
#89000
0!
1+
#90000
1!
0+
#91000
0!
1+
#92000
1!
0+
#93000
0!
1+
#94000
1!
0+
#95000
0!
1+
#96000
1!
0+
#97000
0!
1+
#98000
1!
0+
#99000
0!
1+
#100000
1!
0+
